const scanVulnerabilities = async (target: string, ports: number[]) => {
  const openPorts: number[] = [];
  const missingHeaders: string[] = [];

  for (const port of ports) {
    try {
      const response = await fetch(`http://${target}:${port}`);
      if (response.ok) {
        openPorts.push(port);
      }
      const headers = response.headers;
      const requiredHeaders = ['x-frame-options', 'x-content-type-options'];
      requiredHeaders.forEach((header) => {
        if (!headers.has(header)) {
          missingHeaders.push(header);
        }
      });
    } catch (err: unknown) {
      if (err instanceof Error) {
        console.error(`Error: ${err.message} - Port ${port} is closed or unreachable`);
      } else {
        console.error(`Port ${port} is closed or unreachable`);
      }
    }
  }

  return { openPorts, missingHeaders };
};

export default scanVulnerabilities;


